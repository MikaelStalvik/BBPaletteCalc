<Window x:Class="StPalCalc.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StPalCalc"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:userControls="clr-namespace:StPalCalc.UserControls"
        mc:Ignorable="d"
        Title="Bitbendaz palette and raster toolkit" MinHeight="560" MinWidth="800" Width="800" Height="560">
    <Window.Resources>
        <local:RadioBoolToIntConverter x:Key="RadioBoolToIntConverter" />
        <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <local:ColorToStColorConverter x:Key="ColorToStColorConverter"/>
    </Window.Resources>
    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False" Grid.Row="0" Margin="0,8,0,0">
            <TextBlock Text="Data type:" Margin="8,0,0,0" VerticalAlignment="Center"/>
            <ComboBox x:Name="DataTypesCombo" SelectedIndex="1" Margin="4,0,0,0" SelectionChanged="DataTypesCombo_OnSelectionChanged"/>
            <TextBlock Text="Platform:" Margin="8,0,0,0" VerticalAlignment="Center"/>
            <ComboBox x:Name="PlatformCombo" SelectedIndex="0" Margin="4,0,0,0" SelectionChanged="PlatformCombo_OnSelectionChanged"/>
            <TextBlock Text="Fade/gradient steps:" Margin="8,0,0,0"/>
            <xctk:IntegerUpDown x:Name="FadeStepsUpDown" Value="{Binding FadeSteps}"/>
        </DockPanel>

        <TabControl Margin="8" Grid.Row="1">
            <TabItem Header="Pictures and Palettes">
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Grid.ColumnSpan="2">
                                <DockPanel>
                                    <TextBlock Text="Picture 1" FontWeight="Bold"/>
                                </DockPanel>
                                <DockPanel>
                                    <Button Width="72" Command="{Binding OpenPictureCommand}" Content="Browse..." DockPanel.Dock="Right" Margin="8,0,0,0"/>
                                    <TextBlock Text="{Binding ActiveFilename}"/>
                                </DockPanel>
                                <Image x:Name="Image1" Width="320" Height="200" Margin="0,0,0,8"/>
                                <DockPanel>
                                    <Button Click="ResetButtonBase_OnClick" Content="Reset" Margin="0,8,0,0" DockPanel.Dock="Right" Width="72" VerticalAlignment="Top" MaxHeight="24"/>
                                    <userControls:PalettePresenterUserControl x:Name="ColorsPaletteControl"/>
                                </DockPanel>

                                <DockPanel Margin="0,8,0,0">
                                    <Button Content="Update" Command="{Binding UpdatePaletteCommand}" CommandParameter="{Binding ElementName=Palette1TextBox,Path=Text}" DockPanel.Dock="Right" Width="72"/>
                                    <TextBox Text="{Binding ActivePaletteString}" x:Name="Palette1TextBox" Margin="4,0,0,0"/>
                                </DockPanel>

                                <DockPanel Margin="0,8,0,0">
                                    <TextBlock Text="Hue" Width="64"/>
                                    <Slider Minimum="-120" Maximum="120" x:Name="HueSlider" ValueChanged="HueSlider_OnValueChanged" TickFrequency="1" IsSnapToTickEnabled="True"/>
                                </DockPanel>
                                <TextBlock Text="{Binding ElementName=HueSlider,Path=Value}" FontSize="10" TextAlignment="Center"/>
                                <DockPanel>
                                    <TextBlock Text="Saturation" Width="64"/>
                                    <Slider Minimum="-120" Maximum="120" x:Name="SaturationSlider" ValueChanged="HueSlider_OnValueChanged" TickFrequency="1" IsSnapToTickEnabled="True"/>
                                </DockPanel>
                                <TextBlock Text="{Binding ElementName=SaturationSlider,Path=Value}" FontSize="10" TextAlignment="Center"/>
                                <DockPanel>
                                    <TextBlock Text="Lightness" Width="64"/>
                                    <Slider Minimum="-120" Maximum="120" x:Name="LightnessSlider" ValueChanged="HueSlider_OnValueChanged" TickFrequency="1" IsSnapToTickEnabled="True"/>
                                </DockPanel>
                                <TextBlock Text="{Binding ElementName=LightnessSlider,Path=Value}" FontSize="10" TextAlignment="Center"/>
                                <userControls:PalettePresenterUserControl x:Name="HSLPalettePresenter" Margin="0,8,0,0"/>
                            </StackPanel>
                        </Grid>


                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem Header="Fades">
                <StackPanel>
                    <DockPanel LastChildFill="False" Margin="0,8,0,0">
                        <Button Command="{Binding FadeToBlackCommand}" Content="Fade to black"/>
                        <Button Command="{Binding FadeToWhiteCommand}" Content="Fade to white" Margin="8,0,0,0"/>
                        <Button Command="{Binding FadeFromPaletteToHueCommand}" Content="Hue Fade" Margin="8,0,0,0"/>
                        <Button Command="{Binding FadeToColorCommand}" Content="Fade to color" Margin="8,0,0,0"/>
                        <TextBlock Text="Color" Margin="32,0,0,0" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding FadeToColor}" Width="64"/>
                        <Button Command="{Binding PickColorCommand}" CommandParameter="2" Content="Pick"/>
                    </DockPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <WrapPanel x:Name="PreviewPanel" ItemWidth="24" ItemHeight="24"/>
                    </ScrollViewer>
                </StackPanel>
            </TabItem>

            <TabItem Header="Rasters">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="144"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <StackPanel Margin="8">
                                <TextBlock Text="Picture preview"/>
                                <Image Width="320" Height="200" x:Name="PreviewImage"/>
                                <DockPanel LastChildFill="False">
                                    <Button Command="{Binding LoadPreviewImageCommand}" Content="Load" MinWidth="72"/>
                                    <Button Command="{Binding RefreshRasterPreviewImageCommand}" Content="Refresh" MinWidth="72" Margin="8,0,0,0"/>
                                    <xctk:IntegerUpDown DockPanel.Dock="Right" Value="{Binding RasterColorIndex}"/>
                                    <TextBlock Text="Mask Color" FontSize="10" DockPanel.Dock="Right" VerticalAlignment="Center"/>
                                </DockPanel>
                            </StackPanel>
                            <xctk:ColorCanvas x:Name="ColorCanvas" SelectedColorChanged="ColorCanvas_OnSelectedColorChanged" Width="256" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <DockPanel LastChildFill="False" Margin="0,8,0,0" Grid.Row="1">
                            <Button Command="{Binding CopyItemCommand}" Content="Copy" MinWidth="72"/>
                            <Button Command="{Binding PasteItemCommand}" Content="Paste" Margin="4,0,0,0" MinWidth="72"/>
                            <Button Command="{Binding ParseAsmGradientCommand}" Content="Paste Asm" MinWidth="72" Margin="8,0,0,0"/>
                            <Button Command="{Binding GenerateRastersCommand}" Content="Generate" MinWidth="72" Margin="4,0,0,0" DockPanel.Dock="Right"/>
                            <Button Command="{Binding SaveGradientCommand}" DockPanel.Dock="Right" Content="Save" Margin="4,0,0,0" MinWidth="64"/>
                            <Button Command="{Binding LoadGradientCommand}" DockPanel.Dock="Right" Content="Load" MinWidth="64"/>
                        </DockPanel>
                    </Grid>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Raster list" FontWeight="Bold" Grid.Row="0"/>
                        <ListBox ItemsSource="{Binding GradientItems}" Grid.Row="1" SelectionChanged="Selector_OnSelectionChanged" SelectionMode="Extended" x:Name="GradientListBox">
                            <ListBox.InputBindings>
                                <KeyBinding Key="C" Modifiers="Control" Command="{Binding DataContext.CopyItemCommand,ElementName=GradientListBox}"/>
                                <KeyBinding Key="V" Modifiers="Control" Command="{Binding DataContext.PasteItemCommand,ElementName=GradientListBox}"/>
                                <KeyBinding Key="Delete" Command="{Binding DataContext.DeleteGradientItemCommand,ElementName=GradientListBox}"/>
                            </ListBox.InputBindings>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Index}" FontSize="10" Width="16"/>
                                        <StackPanel Orientation="Horizontal">
                                            <Rectangle Fill="{Binding Color,Converter={StaticResource ColorToBrushConverter}}" Width="24" Height="10"/>
                                            <TextBlock Text="{Binding Color,Converter={StaticResource ColorToStColorConverter}}" FontSize="10"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <StackPanel Grid.Row="2" Margin="4,8,4,0">
                            <DockPanel LastChildFill="True" Margin="0,0,0,4">
                                <TextBlock Text="Selected"/>
                                <TextBox x:Name="GradientText"  MinWidth="64" TextChanged="TextBoxBase_OnTextChanged" Margin="4,0,0,0"/>
                            </DockPanel>
                            <Button Command="{Binding GenerateGradientRasterCommand}" Content="Gradient" MinWidth="72" Height="24" Margin="8,0"/>
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Preview" FontWeight="Bold"/>
                        <StackPanel x:Name="GradientPreviewPanel" Width="80" Grid.Row="1"/>
                    </Grid>

                </Grid>
            </TabItem>

            <TabItem Header="Gradients">
                <StackPanel Margin="8">
                    <DockPanel Margin="0,8,0,0">
                        <TextBlock Text="Start" Width="56"/>
                        <Button Command="{Binding PickColorCommand}" CommandParameter="0" Content="Pick" DockPanel.Dock="Right" Width="72"/>
                        <TextBox Text="{Binding StartColor}" MinWidth="80"/>
                    </DockPanel>
                    <DockPanel Margin="0,8,0,0">
                        <TextBlock Text="End" Width="56"/>
                        <Button Command="{Binding PickColorCommand}" CommandParameter="1" Content="Pick" DockPanel.Dock="Right" Width="72"/>
                        <TextBox Text="{Binding EndColor}" MinWidth="80"/>
                    </DockPanel>

                    <Button Command="{Binding GenerateGradientCommand}" Content="Generate" Margin="0,8,0,0" Width="80" HorizontalAlignment="Left"/>
                    <userControls:PalettePresenterUserControl x:Name="GeneratedGradientPresenter"/>
                    <TextBox Text="{Binding GeneratedPalette}"/>
                </StackPanel>

            </TabItem>

            <TabItem Header="Output">
                <StackPanel>
                    <TextBlock Text="Preview" Margin="0,8,0,0"/>
                    <TextBox FontFamily="Courier New" Text="{Binding PreviewText}" TextWrapping="Wrap"/>
                </StackPanel>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
